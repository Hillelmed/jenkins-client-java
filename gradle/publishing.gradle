apply plugin: 'maven-publish'
apply plugin: 'signing'

group = 'io.github.hmedioni'
version = '1.0.0'

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'jenkins-client-java'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Jenkins rest client in java'
                description = 'Java client for working with Jenkins REST API'
                url = 'https://github.com/Hillelmed/jenkins-client-java'
                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'http://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'HillelMed'
                        name = 'Hillel medioni'
                        email = 'hillel95med@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:https://github.com/Hillelmed/jenkins-client-java.git'
                    developerConnection = 'scm:git://github.com/Hillelmed/jenkins-client-java.git'
                    url = 'https://github.com/Hillelmed/jenkins-client-java/'
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
            def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
