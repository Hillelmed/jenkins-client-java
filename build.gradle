plugins {
    id 'java'
    id 'jacoco'
//    id 'maven-publish'
//    id 'com.github.johnrengelman.shadow' version '7.1.1'
//    id "io.github.gradle-nexus.publish-plugin" version "1.3.0"
}

//apply from: "$rootDir/gradle/additional-artifacts.gradle"
//apply from: "$rootDir/gradle/dependencies.gradle"
//apply from: "$rootDir/gradle/publishing.gradle"
//apply from: "$rootDir/gradle/release.gradle"

repositories {
    mavenCentral()
}

jacoco {
    toolVersion '0.8.11'
}

dependencies {
    implementation 'org.jetbrains:annotations:24.0.0'
    ext.autoValueVersion = '2.0.0'
    ext.autoServiceVersion = '2.0.0'

    implementation group: 'org.springframework', name: 'spring-context', version: '6.1.5'
    implementation group: 'org.springframework', name: 'spring-webflux', version: '6.1.5'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.0'

    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

    testImplementation('org.assertj:assertj-core:3.25.1')
    testImplementation('ch.qos.logback:logback-core:1.4.14')
    testImplementation('com.squareup.okhttp3:mockwebserver:4.12.0')
    testImplementation('org.testng:testng:7.9.0')
    testImplementation('ch.qos.logback:logback-classic:1.5.3')
    testImplementation group: 'org.awaitility', name: 'awaitility', version: '4.2.1'

}

ext.compatibilityVersion = JavaVersion.VERSION_17
ext.javadocPath = compatibilityVersion.isJava8() ? '' : 'en/java/'
ext.sourceCompatibility = compatibilityVersion
ext.targetCompatibility = compatibilityVersion

test {
    useTestNG()
    forkEvery = 1
    maxParallelForks = 1
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Jenkins REST client',
            'Implementation-Version': archiveVersion,
            'Built-By': System.getProperty('user.name'),
            'Built-Date': new Date(),
            'Built-JDK': System.getProperty('java.version'),
            'Built-Gradle': gradle.gradleVersion
    }
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-parameters")
    options.compilerArgs += ["-Xlint:-options"]
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

tasks.register('mockTest', Test) {
    group = "Verification"
    description = "Mock tests"
    useTestNG()
    include '**/**MockTest*'
    forkEvery = 1
    maxParallelForks = 4
}

tasks.register('integTest', Test) {
    group = "Verification"
    description = "Integration tests - Jenkins must be running. See the README."
    useTestNG()
    include "**/**LiveTest*"
    forkEvery = 1
    maxParallelForks = 1
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = true
        html.required = true
    }
}

javadoc {
    source = sourceSets.main.allJava
    options.with {
        links "https://docs.oracle.com/${javadocPath}javase/${compatibilityVersion.toString().replaceAll(/.*\./, "")}/docs/api"
        addStringOption('Xdoclint:none', '-quiet')
        addStringOption('source', compatibilityVersion.toString().replaceAll(/.*\./, ""))
    }
}
