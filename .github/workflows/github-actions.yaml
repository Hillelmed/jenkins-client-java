name: Jenkins REST CI Build
run-name: ${{ github.actor }} is running Jenkins REST CI Build on GitHub Actions üöÄ
on: [push, pull_request_target]
jobs:
  build:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 17 ]
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java-version }}
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - name: Build Jenkins LTS docker images
        run: docker build -t jenkins-rest/jenkins src/main/docker

      - name: Run Jenkins LTS docker images
        run: docker run -d --rm -p 8080:8080 --name jenkins-rest jenkins-rest/jenkins

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Execute Gradle build
        run: ./gradlew clean build mockTest integTest testCoverage --stacktrace

      # generates coverage-report.md and publishes as checkrun
      - name: JaCoCo Code Coverage Report
        id: jacoco_reporter
        uses: PavanMudigonda/jacoco-reporter@v5.0
        with:
          coverage_results_path: jacoco-report/test.xml
          coverage_report_name: Coverage
          coverage_report_title: JaCoCo
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_check_run: false
          minimum_coverage: 50
          fail_below_threshold: false
          publish_only_summary: false

      # Publish Coverage Job Summary  # Optional
      - name: Add Coverage Job Summary
        run: echo "${{ steps.jacoco_reporter.outputs.coverageSummary }}" >> $GITHUB_STEP_SUMMARY

      # uploads the coverage-report.md artifact  # Optional

      - name: Upload Code Coverage Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report-markdown
          path: '*/coverage-results.md'
          retention-days: 1
      - run: echo "üçè This job's status is ${{ job.status }}."
      - name: Stop docker
        run: docker stop jenkins-rest
