name: Jenkins REST CI Build
run-name: ${{ github.actor }} is running Jenkins REST CI Build on GitHub Actions 🚀
on: [push, pull_request_target]
jobs:
  build:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 17 ]
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java-version }}
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - name: Build Jenkins LTS docker images
        run: docker build -t jenkins-rest/jenkins src/main/docker

      - name: Run Jenkins LTS docker images
        run: docker run -d --rm -p 8080:8080 --name jenkins-rest jenkins-rest/jenkins

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Execute Gradle build
        run: ./gradlew clean build mockTest integTest testCoverage --stacktrace

      - name: Jacoco Report to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.1
        with:
          path: ${{ github.workspace }}/build/reports/jacoco/testCoverage/testCoverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 40
          min-coverage-changed-files: 60
          debug-mode: false

      - name: JaCoCo Code Coverage Report
        id: jacoco_reporter
        uses: PavanMudigonda/jacoco-reporter@v4.9
        with:
          coverage_results_path: ${{ github.workspace }}/build/reports/jacoco/testCoverage/testCoverage.xml
          coverage_report_name: Coverage
          coverage_report_title: JaCoCo
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_check_run: true # set to false to publish check run
          minimum_coverage: 20
          fail_below_threshold: false # set to false to pass below even when threshold is not met
          publish_only_summary: false. #set to true to publish only summary to avoid 65k problem

        # Publish Coverage Job Summary  # Optional
      - name: Add Coverage Job Summary
        run: echo "${{ steps.jacoco_reporter.outputs.coverageSummary }}" >> $GITHUB_STEP_SUMMARY

      - name: Get the Coverage info
        run: |
          echo "Total coverage coverage-overall ${{ steps.jacoco.outputs.coverage-overall }}"
          echo "Changed Files coverage ${{ steps.jacoco.outputs.coverage-changed-files }}"
          echo "Coverage coverage_percentage ${{ steps.jacoco.outputs.coverage_percentage }}"

      - name: construct coverage job summary markdown
        run: |
          cat > coverage_summary.md <<EOF
            | Code Coverage Summary                      | Value                                                    |
            |--------------------------------------------|----------------------------------------------------------|
            | Code Coverage %                            | ${{ steps.jacoco_reporter.outputs.coverage_percentage }} |
            | :heavy_check_mark: Number of Lines Covered | ${{ steps.jacoco_reporter.outputs.covered_lines }}       |
            | :x: Number of Lines Missed                 | ${{ steps.jacoco_reporter.outputs.missed_lines }}        |
            | Total Number of Lines                      | ${{ steps.jacoco_reporter.outputs.total_lines }}         |
          EOF
          cat coverage_summary.md >> $GITHUB_STEP_SUMMARY

      - name: print output
        run: echo "${{ steps.jacoco_reporter.outputs.coverageSummary }}" >> $GITHUB_STEP_SUMMARY

      - name: Stop docker
        run: docker stop jenkins-rest
